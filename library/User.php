<?php

/**
 * Class User extends a standard class User of the Creative FW
 */
class User extends \FW\User\User {

    /**
     * Массив всех ip, блокируемых на сайте
     * @var array
     */
    static $badip = [
        '127.0.0.2',
    ];

    /**
     * @var string
     */
    static $avatar = '';
    /**
     * @var string
     */
    static $age = '';
    /**
     * @var string
     */
    static $email = '';
    /**
     * @var string
     */
    static $lastactive;
    /**
     * @var string|int
     */
    static $facebook_id;
    /**
     * @var array
     */
    static $datas = ['id','role','login','avatar', 'age', 'email', 'lastactive', 'facebook_id'];
    /**
     * свойство отвечает за наличие (значение 1 для неавторизованных пользователей)
     * или отсутствие (значение 0 для авторизованных пользователей) капчи для форм
     * @var int
     */
    static $captcha = 0;

    /**
     * Этот класс расширяет базовый класс \FW\User\User и расширяет работу метода Start: при вызове проверяется
     * доступы по IP, вывыполняется logout для забаненых пользователей, проверяется необходимость вывода капчи для форм
     * (всем неавторизированным пользователям в обязательном порядке выводится)и логируются передвижения админа.
     * @param array $auth
     * @return null|void
     */
    static function Start($auth = [])
    {
        if (in_array($_SERVER['REMOTE_ADDR'], self::$badip)) {
            header("HTTP/1.0 503 Service Unavailable");
            require './skins/stubroutine.tpl';
            exit;
        }

        parent::Start($auth); // TODO: Change the autogenerated stub

        if (empty(self::$role)) {
           self::$captcha = 1;
        } elseif (self::$role == 'ban') {
            \FW\User\Authorization::logout();
            redirect('/');
        } elseif (self::$role == 'admin' && isset($_GET['route']) && preg_match('#^admin(/.*|)$#ui', $_GET['route'])) {
            $method = $_SERVER['REQUEST_METHOD'];
            q("
                INSERT INTO `monitor_admin` SET
                `admin_id` = ".(int)self::$id.",
                `url` = '".es(Core::$DOMAIN.$_SERVER['REQUEST_URI'])."',
                `date` = NOW(),
                `method` = '".$method."'
            ");
        }
    }
}